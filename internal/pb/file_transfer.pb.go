// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.13.0
// source: proto/file_transfer.proto

package __

import (
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UploadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	mi := &file_proto_file_transfer_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_transfer_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_file_transfer_proto_rawDescGZIP(), []int{0}
}

func (x *UploadFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadFileRequest) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type UploadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Size          uint32                 `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileResponse) Reset() {
	*x = UploadFileResponse{}
	mi := &file_proto_file_transfer_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResponse) ProtoMessage() {}

func (x *UploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_transfer_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResponse.ProtoReflect.Descriptor instead.
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_file_transfer_proto_rawDescGZIP(), []int{1}
}

func (x *UploadFileResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadFileResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UploadFileResponse) GetSize() uint32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type FilesListRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilesListRequest) Reset() {
	*x = FilesListRequest{}
	mi := &file_proto_file_transfer_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilesListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesListRequest) ProtoMessage() {}

func (x *FilesListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_transfer_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesListRequest.ProtoReflect.Descriptor instead.
func (*FilesListRequest) Descriptor() ([]byte, []int) {
	return file_proto_file_transfer_proto_rawDescGZIP(), []int{2}
}

type FilesListResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Files         []*FileInfo            `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FilesListResponse) Reset() {
	*x = FilesListResponse{}
	mi := &file_proto_file_transfer_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FilesListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilesListResponse) ProtoMessage() {}

func (x *FilesListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_transfer_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilesListResponse.ProtoReflect.Descriptor instead.
func (*FilesListResponse) Descriptor() ([]byte, []int) {
	return file_proto_file_transfer_proto_rawDescGZIP(), []int{3}
}

func (x *FilesListResponse) GetFiles() []*FileInfo {
	if x != nil {
		return x.Files
	}
	return nil
}

type FileInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Filename         string                 `protobuf:"bytes,2,opt,name=filename,proto3" json:"filename,omitempty"`
	CreationDate     *timestamp.Timestamp   `protobuf:"bytes,3,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	ModificationDate *timestamp.Timestamp   `protobuf:"bytes,4,opt,name=modification_date,json=modificationDate,proto3" json:"modification_date,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *FileInfo) Reset() {
	*x = FileInfo{}
	mi := &file_proto_file_transfer_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileInfo) ProtoMessage() {}

func (x *FileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_transfer_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileInfo.ProtoReflect.Descriptor instead.
func (*FileInfo) Descriptor() ([]byte, []int) {
	return file_proto_file_transfer_proto_rawDescGZIP(), []int{4}
}

func (x *FileInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *FileInfo) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileInfo) GetCreationDate() *timestamp.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *FileInfo) GetModificationDate() *timestamp.Timestamp {
	if x != nil {
		return x.ModificationDate
	}
	return nil
}

type DownloadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadFileRequest) Reset() {
	*x = DownloadFileRequest{}
	mi := &file_proto_file_transfer_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRequest) ProtoMessage() {}

func (x *DownloadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_transfer_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadFileRequest) Descriptor() ([]byte, []int) {
	return file_proto_file_transfer_proto_rawDescGZIP(), []int{5}
}

func (x *DownloadFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DownloadFileRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DownloadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Chunk         []byte                 `protobuf:"bytes,2,opt,name=chunk,proto3" json:"chunk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadFileResponse) Reset() {
	*x = DownloadFileResponse{}
	mi := &file_proto_file_transfer_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileResponse) ProtoMessage() {}

func (x *DownloadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_file_transfer_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileResponse.ProtoReflect.Descriptor instead.
func (*DownloadFileResponse) Descriptor() ([]byte, []int) {
	return file_proto_file_transfer_proto_rawDescGZIP(), []int{6}
}

func (x *DownloadFileResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *DownloadFileResponse) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

var File_proto_file_transfer_proto protoreflect.FileDescriptor

const file_proto_file_transfer_proto_rawDesc = "" +
	"\n" +
	"\x19proto/file_transfer.proto\x12\x05drive\x1a\x1fgoogle/protobuf/timestamp.proto\"E\n" +
	"\x11UploadFileRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x14\n" +
	"\x05chunk\x18\x02 \x01(\fR\x05chunk\"T\n" +
	"\x12UploadFileResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x12\n" +
	"\x04size\x18\x03 \x01(\rR\x04size\"\x12\n" +
	"\x10FilesListRequest\":\n" +
	"\x11FilesListResponse\x12%\n" +
	"\x05files\x18\x01 \x03(\v2\x0f.drive.FileInfoR\x05files\"\xc0\x01\n" +
	"\bFileInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bfilename\x18\x02 \x01(\tR\bfilename\x12?\n" +
	"\rcreation_date\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\fcreationDate\x12G\n" +
	"\x11modification_date\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x10modificationDate\"A\n" +
	"\x13DownloadFileRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"H\n" +
	"\x14DownloadFileResponse\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x14\n" +
	"\x05chunk\x18\x02 \x01(\fR\x05chunk2\xdd\x01\n" +
	"\vFileService\x12C\n" +
	"\n" +
	"UploadFile\x12\x18.drive.UploadFileRequest\x1a\x19.drive.UploadFileResponse(\x01\x12>\n" +
	"\tFilesList\x12\x17.drive.FilesListRequest\x1a\x18.drive.FilesListResponse\x12I\n" +
	"\fDownloadFile\x12\x1a.drive.DownloadFileRequest\x1a\x1b.drive.DownloadFileResponse0\x01B\x03Z\x01/b\x06proto3"

var (
	file_proto_file_transfer_proto_rawDescOnce sync.Once
	file_proto_file_transfer_proto_rawDescData []byte
)

func file_proto_file_transfer_proto_rawDescGZIP() []byte {
	file_proto_file_transfer_proto_rawDescOnce.Do(func() {
		file_proto_file_transfer_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_file_transfer_proto_rawDesc), len(file_proto_file_transfer_proto_rawDesc)))
	})
	return file_proto_file_transfer_proto_rawDescData
}

var file_proto_file_transfer_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_proto_file_transfer_proto_goTypes = []any{
	(*UploadFileRequest)(nil),    // 0: drive.UploadFileRequest
	(*UploadFileResponse)(nil),   // 1: drive.UploadFileResponse
	(*FilesListRequest)(nil),     // 2: drive.FilesListRequest
	(*FilesListResponse)(nil),    // 3: drive.FilesListResponse
	(*FileInfo)(nil),             // 4: drive.FileInfo
	(*DownloadFileRequest)(nil),  // 5: drive.DownloadFileRequest
	(*DownloadFileResponse)(nil), // 6: drive.DownloadFileResponse
	(*timestamp.Timestamp)(nil),  // 7: google.protobuf.Timestamp
}
var file_proto_file_transfer_proto_depIdxs = []int32{
	4, // 0: drive.FilesListResponse.files:type_name -> drive.FileInfo
	7, // 1: drive.FileInfo.creation_date:type_name -> google.protobuf.Timestamp
	7, // 2: drive.FileInfo.modification_date:type_name -> google.protobuf.Timestamp
	0, // 3: drive.FileService.UploadFile:input_type -> drive.UploadFileRequest
	2, // 4: drive.FileService.FilesList:input_type -> drive.FilesListRequest
	5, // 5: drive.FileService.DownloadFile:input_type -> drive.DownloadFileRequest
	1, // 6: drive.FileService.UploadFile:output_type -> drive.UploadFileResponse
	3, // 7: drive.FileService.FilesList:output_type -> drive.FilesListResponse
	6, // 8: drive.FileService.DownloadFile:output_type -> drive.DownloadFileResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_proto_file_transfer_proto_init() }
func file_proto_file_transfer_proto_init() {
	if File_proto_file_transfer_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_file_transfer_proto_rawDesc), len(file_proto_file_transfer_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_file_transfer_proto_goTypes,
		DependencyIndexes: file_proto_file_transfer_proto_depIdxs,
		MessageInfos:      file_proto_file_transfer_proto_msgTypes,
	}.Build()
	File_proto_file_transfer_proto = out.File
	file_proto_file_transfer_proto_goTypes = nil
	file_proto_file_transfer_proto_depIdxs = nil
}
